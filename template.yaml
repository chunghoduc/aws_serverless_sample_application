AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: 'Serverless Image Management Application'

Globals:
  Function:
    Timeout: 60

Resources:
  ListImagesFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: image_management.app.list_images
      Runtime: python3.9
      CodeUri: image_management/
      MemorySize: 128
      Environment:
        Variables:
          BUCKET_NAME: !Ref ImageBucket
      Events:
        ListImagesApi:
          Type: Api
          Properties:
            Path: /images
            Method: GET

  ThumbnailGeneratorFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: image_management.app.generate_thumbnail
      Runtime: python3.9
      CodeUri: image_management/
      MemorySize: 128
      Environment:
        Variables:
          BUCKET_NAME: !Ref ImageBucket
      Events:
        S3Event:
          Type: S3
          Properties:
            Bucket: !Ref ImageBucket
            Events: s3:ObjectCreated:*

  RenameImageFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: image_management.app.rename_image
      Runtime: python3.9
      CodeUri: image_management/
      MemorySize: 128
      Environment:
        Variables:
          BUCKET_NAME: !Ref ImageBucket
      Events:
        RenameImageApi:
          Type: Api
          Properties:
            Path: /images/rename
            Method: POST

  ImageBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: awsserverlesstestappimages

  ApiGatewayRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: ApiGatewayRolePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource:
                  - !GetAtt ListImagesFunction.Arn
                  - !GetAtt RenameImageFunction.Arn
                  - !GetAtt ThumbnailGeneratorFunction.Arn

  ApiGateway:
    Type: 'AWS::Serverless::Api'
    Properties:
      Name: ImageManagementApi
      StageName: prod
      DefinitionBody:
        swagger: '2.0'
        info:
          title: Image Management API
          version: '1.0'
        paths:
          /images:
            get:
              x-amazon-apigateway-integration:
                uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ListImagesFunction.Arn}/invocations
                httpMethod: POST
                type: aws_proxy
              produces:
                - application/json
          /images/rename:
            post:
              x-amazon-apigateway-integration:
                uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${RenameImageFunction.Arn}/invocations
                httpMethod: POST
                type: aws_proxy
              produces:
                - application/json
      DefinitionUri: swagger.yaml

Outputs:
  ApiUrl:
    Description: "URL of the API Gateway"
    Value: !Sub 'https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/prod'